    @Nullable
    @Override
    public BlockState getStateForPlacement(@Nonnull BlockItemUseContext context)
    {
        BlockState state = super.getStateForPlacement(context);

        if (state == null)
            return null;

        //Set the waterlogged state
        boolean waterlogged = context.getWorld().hasWater(context.getPos());
        state = state.with(WATERLOGGED, waterlogged);

        return state;
    }



    @Deprecated
    @Override
    public void randomTick(BlockState state, ServerWorld world,  BlockPos pos,  Random random)
    {
        int age = state.get(AGE);
        boolean waterlogged = state.get(WATERLOGGED);
        if (age < 3)
        {
            //Prev 30 and 15
            if (random.nextInt(waterlogged ? 2 : 4) == 0)
                world.setBlockState(pos, state.with(AGE, age + 1), 2);
        }
        else {
            if (waterlogged) {world.setBlockState(pos, state.with(AGE, age - random.nextInt(3)), 3); }
            if(!world.isRemote) {
                ResourceLocation resourcelocation = new ResourceLocation("crystalglass:blocks/waterlogged_crystal_cluster_automated");

                LootContext.Builder builder = (new LootContext.Builder((ServerWorld) world)).withRandom(RANDOM)
                        .withParameter(LootParameters.field_237457_g_, Vector3d.copyCentered(pos)).withParameter(LootParameters.TOOL, ItemStack.EMPTY);
                LootContext lootcontext = builder.withParameter(LootParameters.BLOCK_STATE, state).build(LootParameterSets.BLOCK);
                ServerWorld serverworld = lootcontext.getWorld();
                LootTable loottable = serverworld.getServer().getLootTableManager().getLootTableFromLocation(resourcelocation);
                List<ItemStack> lootTableItems = loottable.generate(lootcontext);

                for(ItemStack stack : lootTableItems){
                    spawnAsEntity(world, pos, stack);
                }
            }

            world.playSound((PlayerEntity)null, pos, (SoundEvent) ModSounds.Events.CRYSTAL_SHIMMER.get(), SoundCategory.BLOCKS, 2F, 1.5F + world.rand.nextFloat() * 0.4F);
        }
    }